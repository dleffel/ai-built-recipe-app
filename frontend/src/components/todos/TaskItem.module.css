@import './TodoVariables.css';

.taskItem {
  display: flex;
  align-items: center;
  padding: var(--spacing-1) var(--spacing-2);
  margin-bottom: var(--spacing-1);
  background-color: white;
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-sm);
  cursor: grab;
  transition: box-shadow var(--transition-fast),
              transform var(--transition-fast),
              opacity var(--transition-normal);
  border: 1px solid var(--todo-border-color);
}

.taskItem:hover {
  box-shadow: var(--shadow-md);
}

.taskItem:active {
  cursor: grabbing;
  box-shadow: var(--shadow-lg);
}

/* Add styling for when item is being dragged */
.taskItem.dragging {
  opacity: 0.8;
  transform: scale(1.02);
  box-shadow: var(--shadow-lg);
}

/* Add styling for when item is being moved between days */
.taskItem.moving {
  opacity: 0.6;
  transform: translateY(-5px);
  box-shadow: var(--shadow-lg);
  background-color: var(--feedback-info-bg);
  border-color: var(--button-primary-bg);
  transition: opacity var(--transition-normal),
              transform var(--transition-normal),
              box-shadow var(--transition-normal),
              background-color var(--transition-normal),
              border-color var(--transition-normal);
}

/* Rest of styling remains mostly the same */
.completed {
  opacity: 0.85;
  background-color: #F9FAFB;
  border-color: var(--todo-border-color);
}

.completed .taskTitle {
  text-decoration: line-through;
  color: var(--status-complete-color);
}

.dragHandle {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: var(--spacing-1);
  color: var(--todo-muted-color);
  cursor: grab;
  font-size: var(--font-size-base);
  width: 24px;
  height: 24px;
  border-radius: var(--radius-sm);
  transition: background-color var(--transition-fast);
}

.dragHandle:hover {
  color: var(--todo-text-color);
  background-color: var(--button-secondary-bg);
}

.dragHandleIcon {
  width: 16px;
  height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Add ghost styling for drag preview */
.dragGhost {
  position: absolute;
  top: -1000px;
  background-color: var(--todo-bg-color);
  padding: var(--spacing-1);
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-lg);
  max-width: 200px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  border: 1px solid var(--todo-border-color);
}

/* Add drop target styling */
.dropTarget {
  background-color: var(--feedback-info-bg);
  box-shadow: 0 0 0 2px var(--button-primary-bg);
}

.checkbox {
  appearance: none;
  -webkit-appearance: none;
  width: 22px;
  height: 22px;
  border: 2px solid var(--todo-muted-color);
  border-radius: var(--radius-sm);
  cursor: pointer;
  position: relative;
  transition: all var(--transition-fast);
  flex-shrink: 0;
  margin-right: var(--spacing-2);
}

.checkbox:focus {
  outline: 2px solid var(--button-primary-bg);
  outline-offset: 2px;
}

.checkbox:checked {
  background-color: var(--button-primary-bg);
  border-color: var(--button-primary-bg);
}

.checkbox:checked::after {
  content: 'âœ“';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-bold);
}

.taskContent {
  flex: 1;
  min-width: 0;
  display: flex;
  align-items: center;
  gap: var(--spacing-1);
}

.taskTitle {
  font-size: var(--font-size-sm);
  color: var(--todo-text-color);
  margin: 0;
  overflow: hidden;
  overflow-wrap: break-word;
  word-break: break-word;
  cursor: pointer;
  padding: var(--spacing-1) 0;
  font-family: var(--font-family-ui);
  font-weight: var(--font-weight-medium);
}

.categoryIndicator {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 3px 8px;
  border-radius: 12px;
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-semibold);
  min-width: 70px;
  letter-spacing: 0.5px;
}

.categoryFullName {
  display: block;
}

.categoryAbbr {
  display: none;
}

.roovet {
  background-color: var(--category-roovet-bg);
  color: var(--category-roovet-text);
}

.roocode {
  background-color: var(--category-roocode-bg);
  color: var(--category-roocode-text);
}

.personal {
  background-color: var(--category-personal-bg);
  color: var(--category-personal-text);
}

.priorityIndicator {
  color: var(--priority-color);
  font-size: var(--font-size-base);
  margin-left: var(--spacing-1);
  margin-right: var(--spacing-1);
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
}

.rolledOver {
  font-style: italic;
}

.rolledOverIndicator {
  font-size: var(--font-size-xs);
  color: var(--todo-muted-color);
  margin-left: var(--spacing-1);
  background-color: var(--button-secondary-bg);
  padding: 1px 4px;
  border-radius: var(--radius-sm);
}

.actionButton {
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: 1px solid transparent;
  color: var(--todo-muted-color);
  cursor: pointer;
  padding: 4px;
  border-radius: var(--radius-sm);
  transition: all var(--transition-fast);
  min-width: 32px;
  height: 32px;
  position: relative;
}

.actionButton:hover {
  background-color: var(--button-secondary-bg);
  color: var(--todo-text-color);
  border-color: var(--todo-border-color);
}

.actionButton:focus {
  outline: 2px solid var(--button-primary-bg);
  outline-offset: 2px;
}

.actionButtonLabel {
  position: absolute;
  font-size: var(--font-size-xs);
  bottom: -18px;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  color: var(--todo-muted-color);
  opacity: 0;
  transition: opacity var(--transition-fast);
}

.actionButton:hover .actionButtonLabel {
  opacity: 1;
}

/* Responsive styles */
@media (max-width: 768px) {
  .taskItem {
    padding: calc(var(--spacing-1) * 0.75);
  }
  
  .categoryIndicator {
    padding: 2px 6px;
    font-size: var(--font-size-xs);
  }
  
  .categoryFullName {
    display: none;
  }
  
  .categoryAbbr {
    display: block;
  }
  
  .taskTitle {
    font-size: var(--font-size-xs);
  }
  
  .actionButtonLabel {
    display: none;
  }
}