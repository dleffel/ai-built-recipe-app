@import './TodoVariables.css';

/* Styles for the drag feedback component */
.dragFeedback {
  display: flex;
  align-items: center;
  background-color: white;
  border-radius: var(--radius-md);
  padding: var(--spacing-1) var(--spacing-2);
  box-shadow: var(--shadow-lg);
  max-width: 300px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  pointer-events: none;
  position: fixed;
  z-index: var(--z-index-dragitem);
  top: -1000px;
  left: -1000px;
  border: 1px solid var(--todo-border-color);
}

.categoryIndicator {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-semibold);
  padding: 3px 8px;
  border-radius: 12px;
  margin-right: var(--spacing-1);
  color: white;
  letter-spacing: 0.5px;
}

.rooVet {
  background-color: var(--category-roovet-bg);
}

.rooCode {
  background-color: var(--category-roocode-bg);
}

.personal {
  background-color: var(--category-personal-bg);
}

.taskTitle {
  flex: 1;
  font-size: var(--font-size-sm);
  margin-right: var(--spacing-1);
  font-family: var(--font-family-ui);
  font-weight: var(--font-weight-medium);
  color: var(--todo-text-color);
}

.priorityIndicator {
  color: var(--priority-color);
  font-size: var(--font-size-base);
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Styles for the draggable item */
.draggable {
  cursor: grab;
  user-select: none;
  transition: transform var(--transition-fast), box-shadow var(--transition-fast);
}

.draggable:active {
  cursor: grabbing;
}

/* Styles for the item being dragged */
.dragging {
  opacity: 0.9;
  transform: scale(1.02);
  background-color: var(--feedback-info-bg);
  z-index: var(--z-index-dragitem);
  pointer-events: none;
  box-shadow: var(--shadow-lg);
}

/* Styles for the drag preview (ghost element) */
.dragPreview {
  opacity: 0.8;
  background-color: var(--feedback-info-bg);
  pointer-events: none;
  border: 1px solid var(--button-primary-bg);
}

/* Styles for the drop target */
.dropTarget {
  background-color: var(--feedback-info-bg);
  opacity: 0.8;
  margin: var(--spacing-1) 0;
  height: 40px;
  animation: pulse 1.5s infinite;
  border-radius: var(--radius-md);
}

/* Styles for valid drop targets */
.validDropTarget {
  background-color: var(--feedback-success-bg);
  border: 1px dashed var(--feedback-success-text);
}

/* Styles for invalid drop targets */
.invalidDropTarget {
  background-color: var(--feedback-error-bg);
  border: 1px dashed var(--feedback-error-text);
  cursor: not-allowed;
}

/* Styles for the drop indicator line */
.dropIndicator {
  height: 3px;
  background-color: var(--button-primary-bg);
  margin: var(--spacing-1) 0;
  border-radius: var(--radius-sm);
  animation: pulse 1.5s infinite;
  /* Ensure the indicator is only visible during active drag */
  pointer-events: none;
  transition: opacity var(--transition-fast);
}

/* Styles for the day container when it's a drop target */
/* IMPORTANT: Do not change the background color of the day container during drag */
.dayDropTarget {
  /* Keep the original white background */
  background-color: white !important;
  /* Add a border instead to indicate it's a drop target */
  border: 2px dashed var(--button-primary-bg) !important;
  /* Add some padding to prevent content shift */
  padding: calc(var(--spacing-2) - 2px) !important;
}

/* IMPORTANT: Make sure task items remain fully visible during drag */
.dayDropTarget [data-id] {
  /* Force white background */
  background-color: white !important;
  /* Force full opacity */
  opacity: 1 !important;
  /* Add a subtle shadow for better visibility */
  box-shadow: var(--shadow-sm) !important;
  /* Ensure z-index is higher than other elements */
  position: relative !important;
  z-index: 5 !important;
  /* Force visibility */
  visibility: visible !important;
  display: flex !important;
}

/* Animation for the pulse effect */
@keyframes pulse {
  0%, 100% {
    opacity: 0.7;
  }
  50% {
    opacity: 1;
  }
}

/* Animation for the drop indicator */
@keyframes slideIn {
  from {
    transform: scaleX(0);
  }
  to {
    transform: scaleX(1);
  }
}

/* Responsive styles */
@media (max-width: 768px) {
  .dropTarget {
    height: 30px;
  }
  
  .dragFeedback {
    max-width: 250px;
    padding: calc(var(--spacing-1) * 0.75) var(--spacing-1);
  }
  
  .categoryIndicator {
    padding: 2px 6px;
    font-size: calc(var(--font-size-xs) * 0.9);
  }
  
  .taskTitle {
    font-size: calc(var(--font-size-xs) * 1.1);
  }
}