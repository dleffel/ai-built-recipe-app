// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  googleId    String?   @unique
  displayName String?
  photoUrl    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  lastLoginAt DateTime?

  // Relations
  recipes     Recipe[]
  tasks       Task[]

  @@map("users")
}

model Recipe {
  id           String    @id @default(uuid())
  title        String
  description  String?
  ingredients  String[]  // Array of ingredient strings
  instructions String[]
  servings     Int?
  prepTime     Int?     // In minutes
  cookTime     Int?     // In minutes
  imageUrl     String?
  sourceUrl    String?   // URL where recipe was imported from
  isDeleted    Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  
  // Relations
  userId       String
  user         User      @relation(fields: [userId], references: [id])

  @@map("recipes")
  @@index([userId])
}

model Task {
  id                String    @id @default(uuid())
  title             String
  status            String    // "complete" or "incomplete"
  dueDate           DateTime
  category          String    // "Roo Vet", "Roo Code", "Personal"
  isPriority        Boolean   @default(false)
  createdAt         DateTime  @default(now())
  completedAt       DateTime?
  isRolledOver      Boolean   @default(false)
  displayOrder      Int       // For ordering tasks within a day
  
  // Relations
  userId            String
  user              User      @relation(fields: [userId], references: [id])

  @@map("tasks")
  @@index([userId])
  @@index([dueDate])
}
